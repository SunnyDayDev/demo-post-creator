// Generated by Dagger (https://dagger.dev).
package dev.sunnyday.postcreator.core.permissions;

import dagger.internal.Factory;
import dev.sunnyday.postcreator.core.ui.ActivityObserver;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PermissionRequestInteractorImpl_Factory implements Factory<PermissionRequestInteractorImpl> {
  private final Provider<ActivityObserver> activityObserverProvider;

  public PermissionRequestInteractorImpl_Factory(
      Provider<ActivityObserver> activityObserverProvider) {
    this.activityObserverProvider = activityObserverProvider;
  }

  @Override
  public PermissionRequestInteractorImpl get() {
    return newInstance(activityObserverProvider.get());
  }

  public static PermissionRequestInteractorImpl_Factory create(
      Provider<ActivityObserver> activityObserverProvider) {
    return new PermissionRequestInteractorImpl_Factory(activityObserverProvider);
  }

  public static PermissionRequestInteractorImpl newInstance(ActivityObserver activityObserver) {
    return new PermissionRequestInteractorImpl(activityObserver);
  }
}
